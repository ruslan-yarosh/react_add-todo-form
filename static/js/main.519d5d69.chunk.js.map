{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","allTodo","setAllTodo","setTitle","setUserId","isTitleEmpty","setIsTitleEmpty","isUserIdEmpty","setIsUserIdEmpty","action","method","onSubmit","event","preventDefault","trim","newTodo","sort","prev","current","addTodo","htmlFor","type","value","onChange","target","test","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.519d5d69.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../interfaces/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../interfaces/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../interfaces/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { User } from './interfaces/User';\nimport { Todo } from './interfaces/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [allTodo, setAllTodo] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isTitleEmpty, setIsTitleEmpty] = useState(true);\n  const [isUserIdEmpty, setIsUserIdEmpty] = useState(true);\n\n  const getId = () => {\n    const largestId = [...allTodo].sort((prev, current) => (\n      current.id - prev.id\n    ));\n\n    return largestId[0].id + 1;\n  };\n\n  const addTodo = () => {\n    if (title.trim() && userId) {\n      const newTodo = {\n        id: getId(),\n        title,\n        completed: false,\n        userId,\n        user: getUser(userId),\n      };\n\n      setAllTodo(current => [...current, newTodo]);\n      setTitle('');\n      setUserId(0);\n      setIsTitleEmpty(true);\n      setIsUserIdEmpty(true);\n    }\n\n    if (!title.trim()) {\n      setIsTitleEmpty(false);\n    }\n\n    if (!userId) {\n      setIsUserIdEmpty(false);\n    }\n  };\n\n  const isValid = (value: string) => {\n    const regEx = /^[a-zA-Z0-9 ]*$/;\n\n    return regEx.test(value.trim());\n  };\n\n  const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addTodo();\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (isValid(event.target.value)) {\n      setTitle(event.target.value);\n    }\n\n    setIsTitleEmpty(true);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setIsUserIdEmpty(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleOnSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              id=\"title\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handleTitleChange}\n              placeholder=\"Enter a title\"\n            />\n          </label>\n\n          {!isTitleEmpty && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              id=\"user\"\n              value={userId}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {!isUserIdEmpty && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={allTodo} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}